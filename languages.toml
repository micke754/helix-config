# LSP Server Config
[language-server.harper-ls]
command = "harper-ls"
args = ["--stdio"]

[language-server.vale-ls]
command = "vale-ls"

[language-server.pylsp.config.pylsp]
plugins.pylsp_mypy.enabled = true
plugins.pylsp_mypy.live_mode = true

[language-server.jedi]
command = "jedi-language-server"
args = ["--tcp"]

[language-server.basedpyright]
command = "basedpyright-langserver"
args = ["--stdio"]

# [language-server.basedpyright.config.python.analysis]
# typeCheckingMode = "basic"

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]

[language-server.pyright.config.python.analysis]
typeCheckingMode = "basic"

# if you choose `ruff` itself
[language-server.ruff]
command = "ruff"
args = ["server"]

[language-server.pylyzer]
command = "pylyzer"
args = ["--server"]

# Language Config

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
auto-format = true

[[language]]
name = "python"
language-servers = ["basedpyright", "ruff"]
formatter = { command = "ruff", args = ["format", "--line-length", "80", "-"] }
auto-format = true

[[language]]
name = "sql"
formatter = { command = "sqlfmt", args = [
  "--stdin-filename",
  "$FILENAME",
  "-",
] }

[[language]]
name = "yaml"
formatter = { command = 'prettierd', args = ["--parser", "yaml"] }
auto-format = true
language-servers = ["yaml-language-server", "ansible-language-server"]

[[language]]
name = "markdown"
language-servers = ["gpt", "vale-ls"]
file-types = ["txt", "md"]

[[language]]
name = "nix"
formatter = { command = "nixpkgs-fmt" }

[[language]]
name = "nu"
formatter = { command = "nufmt", args = ["--stdin-filename", "$FILENAME", "-"] }

[[grammar]]
name = "r"
source = { git = "https://github.com/r-lib/tree-sitter-r", rev = "main" }
